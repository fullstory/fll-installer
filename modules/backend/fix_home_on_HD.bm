##
##-------------------------------------
# Needs:
# TARGET_MNT_POINT
# USER_NAME
# DEFAULT_USER
#
# Calls:
# logit
# progress
#
##-------------------------------------
##
function fix_home_on_HD()
{
	local NEWHOME
	local OLDHOME

	#
	# log my call
	#
	logit $"fix_home_on_HD"
	#

	#
	# Mozilla Konfigdateien korrigieren
	#
	if [ "$USER_NAME" != "$DEFAULT_USER" ];	then
		rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.mozilla/appreg"
		rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.mozilla/pluginreg.dat"
		# TODO: Test if symlink works ...
		if [ -e "$TARGET_MNT_POINT/home/$USER_NAME/.mozilla/$DEFAULT_USER" ]; then
			if [ ! -e "$TARGET_MNT_POINT/home/$USER_NAME/.mozilla/default" ]; then
				mv "$TARGET_MNT_POINT/home/$USER_NAME/.mozilla/$DEFAULT_USER" \
					"$TARGET_MNT_POINT/home/$USER_NAME/.mozilla/default"
			fi
			perl -pi -e 's/.*general.useragent.*\n?//' \
				"$TARGET_MNT_POINT/home/$USER_NAME/.mozilla/default/*/prefs.js"
		fi

		#
		# Bei unterschiedlichem OLD/NEWHOME muss man die Pfade anpassen
		# sonst funktionieren die Anwendungen nicht korrekt
		#
		OLDHOME="/home/$DEFAULT_USER"
		NEWHOME="/home/$USER_NAME"
		PART="$TARGET_MNT_POINT"
		for f in $(find "$PART$NEWHOME" -exec grep -ls "$OLDHOME" {} \;|grep -v $0); do
			perl -pi -e "s|$OLDHOME|$NEWHOME|g" "$f"
		done
	fi

	#
	# Neue Symbole auf dem Desktop
	#
	if [ -e "$TARGET_MNT_POINT/home/$USER_NAME/Desktop/sidux.desktop" ]; then
		cat >"$TARGET_MNT_POINT/home/$USER_NAME/Desktop/sidux.desktop" <<EOF
[Desktop Entry]
Name=sidux
# Exec=kfmclient openProfile webbrowsing http://sidux.com/
Exec=konqueror --geometry 800x600+110+40 http://sidux.com/
Type=Application
Icon=html
Terminal=0
EOF
	fi

	#
	# stop loading browser
	#
	if [ -f "$TARGET_MNT_POINT/home/$USER_NAME/.kde/Autostart/showindex.desktop" ]; then
		rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.kde/Autostart/showindex.desktop"
	fi

	#
	# revert to plain debian .bashrc
	#
	cp "$TARGET_MNT_POINT/etc/skel/.bashrc" "$TARGET_MNT_POINT/home/$USER_NAME/.bashrc"
	
	#
	# revert kdesu/sudo workaround
	#
	if grep -q sudo "$TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesurc" 2>/dev/null; then
		rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesurc"
	fi

	#
	# revert su-to-root workaround
	#
	if grep -q sudo "$TARGET_MNT_POINT/home/$USER_NAME/.su-to-rootrc" 2>/dev/null; then
		rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.su-to-rootrc"
	fi

	#
	# force kde first time configuration
	#
	if [ -f /etc/skel/.kde/share/config/kpersonalizerrc ]; then
		perl -pi -e 's/FirstLogin=false/FirstLogin=true/g' \
			"$TARGET_MNT_POINT/etc/skel/.kde/share/config/kpersonalizerrc"

		# The users kde should be perfect, unless we just copied from template ...
		if [ ! -d "/home/$DEFAULT_USER/.kde" ]; then
			perl -pi -e 's/FirstLogin=false/FirstLogin=true/g' \
				"$TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kpersonalizerrc"
		fi
	fi

	#
	# this is from a possible gnome install
	#
	if [ -f "${TARGET_MNT_POINT}/home/${USER_NAME}/.config/autostart/${FLL_DISTRO_NAME}-manual.desktop" ]; then
		rm -f "${TARGET_MNT_POINT}/home/${USER_NAME}/.config/autostart/${FLL_DISTRO_NAME}-manual.desktop"
	fi

	#
	# remove temporary kde- user files
	#
	rm -f "${TARGET_MNT_POINT}/home/${USER_NAME}/.DCOPserver_*_*"
	rm -f "${TARGET_MNT_POINT}/home/${USER_NAME}/.kde/cache-*"
	rm -f "${TARGET_MNT_POINT}/home/${USER_NAME}/.kde/socket-*"
	rm -f "${TARGET_MNT_POINT}/home/${USER_NAME}/.kde/tmp-*"
	rm -f "${TARGET_MNT_POINT}/home/${USER_NAME}/.*uthority"
	rm -f "${TARGET_MNT_POINT}/home/${USER_NAME}/Desktop/install-gui.desktop"
	
	#
	# clean ownership
	#
	chroot "$TARGET_MNT_POINT" chown -R "$USER_NAME":"$USER_NAME" "/home/$USER_NAME"
}
##-------------------------------------
#
