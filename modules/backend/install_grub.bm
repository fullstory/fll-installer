##
##-------------------------------------
# Needs:
# HD_CHOICE
# BOOT_WHERE (also changed here)
# TARGET_MNT_POINT
# FLL_DISTRO_NAME
# HD_FSTYPE 
# BOOT_RUNNING_KERNEL
# TMPDIR
# LANG
# HD_MAP
#
# Calls:
# logit
# get_root_device
# chroot_it
# translate_linux_to_grub
# get_grub_cmdline
# getbootparam
#
# update_status
# install_grub
#
##-------------------------------------
##
install_grub()
{
	local GRUB_KOPT
	local GRUB_DEFOPTIONS
	local GRUB_VGA
	local root_partition
	local root_device
	local device
	local usb_dev
	local point
	local bootfrom
	
	#
	# log my call
	#
	logit $"installing grub"
	#

	root_partition=$(echo ${HD_CHOICE} |cut -d"'" -f2)

	root_device=$(get_root_device $root_partition)

	device=$(echo $root_device|cut -d / -f3)
	
	usb_dev=$(echo $(readlink -f /sys/block/${device}/device) | grep  "usb")

	# if the user chooses an USB device for the Grub installation we ignore
	# that ( at least till further investigation) and set it to "partition"
        case $BOOT_WHERE in
                mbr)
			 bootfrom="(hd0)"
                        ;;
                partition)
                        bootfrom="${root_partition}"
                        ;;
                /dev/[hs]d[a-z]) 
			device="$(echo ${BOOT_WHERE}|cut -d / -f3)"
                        if [ -n "$(echo $(readlink -f /sys/block/${device}/device) | \
                                grep  "usb")" ]; then
                                bootfrom="${root_partition}"
                        else
                                bootfrom="${BOOT_WHERE}"
                        fi
                        ;;
		*) 
                                bootfrom="${root_partition}"
        esac

	if [ -n "${usb_dev}" ]; then
		# USB install must have first Grub on partition
		bootfrom=${HD_CHOICE}
	else
		# in case of jfs/xfs force installation to mbr
		# but only if HD is not on USB and it's not already MBR
		if [ "${BOOT_WHERE}" = "partition" ]; then
			case $HD_FSTYPE in
			jfs|xfs) bootfrom=${root_device};;
			esac
		fi
	fi

	# installing on MBR 
	if [ "$bootfrom" = "$(get_root_device ${bootfrom})" ]
	then
		# Make a backup of the old mbr
		dd if=${bootfrom} of=$TARGET_MNT_POINT/boot/${FLL_DISTRO_NAME}-old-mbr.$(date -I) \
			bs=446 count=1 >/dev/null 2>/dev/null
	fi

	#
	# install grub
	#
	if [ "${bootfrom}" = "$(get_root_device ${bootfrom})" ]
	then # install on MBR
		grub-install --recheck --no-floppy --root-directory=$TARGET_MNT_POINT "${bootfrom}"
	else # install on partition
	     # is twice because sometimes the first one fails in that cases the second
	     # don't fail !!!
		grub-install --recheck --no-floppy --root-directory=$TARGET_MNT_POINT "${bootfrom}" || \
			grub-install --recheck --no-floppy --root-directory=$TARGET_MNT_POINT "${bootfrom}"
	fi

	# 
	# Create initital grub configuration (grub2 ignores -y)
	#
	say "create initital grub configuration"
	chroot_it update-grub -y

	#
	# Create a new cmdline
	#
	GRUB_KOPT=" $(get_grub_cmdline)"
	
	# extract vga mode from CMDLINE
	GRUB_VGA=$(getbootparam vga)
	[ -z "$GRUB_VGA" ] && GRUB_VGA="791"

	GRUB_DEFOPTIONS=" vga=$GRUB_VGA"

	# grub-gfxboot/ grub-legacy
	if [ -e "${TARGET_MNT_POINT}/usr/share/bug/grub" ] || [ -e "${TARGET_MNT_POINT}/usr/share/bug/grub-gfxboot" ]; then
		if [ -w "${TARGET_MNT_POINT}/boot/grub/menu.lst" ]; then
			# set up gfxmenu for grub-gfxboot
			if [ -e "${TARGET_MNT_POINT}/usr/share/bug/grub-gfxboot" ] && [ -s "${TARGET_MNT_POINT}/boot/message" ]; then
				if mount | grep -q "${TARGET_MNT_POINT}/boot"; then
					sed -i "s|^color[ \t].*|&\ngfxmenu $(grep ^\#\ groot\= ${TARGET_MNT_POINT}/boot/grub/menu.lst | cut -d\= -f2)/message|g" \
						"${TARGET_MNT_POINT}/boot/grub/menu.lst"
				else
					sed -i "s|^color[ \t].*|&\ngfxmenu $(grep ^\#\ groot\= ${TARGET_MNT_POINT}/boot/grub/menu.lst | cut -d\= -f2)/boot/message|g" \
						"${TARGET_MNT_POINT}/boot/grub/menu.lst"
				fi
			fi

			#
			# configure menu.lst:	- keyboard charset (TODO: only de so far)
			# 			- disable alternatives
			#			- enable savedefault
			#			- prune kopt
			#			- add vga= to defoptions
			#
			sed -i	-e "/#.*and\ \/usr\/share\/doc\/grub-legacy-doc\/\./ r ${SEARCHPATH}/data/grub-charset.$(echo $LANG | cut -d\_ -f1)" \
				-e "s/^default[ \t].*/default saved/g" \
				-e "s/^# alternative=true/# alternative=false/g" \
				-e "s|^# kopt=root=.*[ \t]ro|&$GRUB_KOPT|" \
				-e "s|^\# defoptions=.*|&$GRUB_DEFOPTIONS|" \
					"${TARGET_MNT_POINT}/boot/grub/menu.lst"
		fi
	fi

	# grub2
	if [ -e "${TARGET_MNT_POINT}/usr/share/bug/grub-pc" ] && [ -w "${TARGET_MNT_POINT}/boot/grub.cfg" ]; then
		#TODO no special configuration implemented yet
		:
	fi

	# hook update-grub -y into the kernel installing chain
cat << EOF > "$TARGET_MNT_POINT/etc/kernel-img.conf"
# Kernel Image management overrides
# See kernel-img.conf(5) for details
do_symlinks = Yes
postinst_hook = /usr/sbin/update-grub
postrm_hook = /usr/sbin/update-grub
do_bootloader = no
do_initrd = Yes
relative_links = Yes
EOF
	
	# update the grub config with our changes (grub2 ignores -y)
	chroot_it update-grub -y

	return 0
}

