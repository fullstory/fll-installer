##
##-------------------------------------
# Needs:
# FLL_DISTRO_NAME-installer
# CONFIG_FILE
# TMPDIR
# MODULE_ERROR
# BOOT_DISK
# MODULE_ERROR
# INSTALL_META
# HD_MAP
# ACTION (changes)
# LOG
#
# Calls:
# logit
# progress
# load_config
# prepareHD
# copy2HD
# convert_live2HD
# add_bootmanager
# update_fstab
# fix_grub_for_UUID
# appendGrubForOtherOS
# fix_usb_install
# purge_live_only_stuff
# make_floppy
# end_progress
#
##-------------------------------------
##
function main()
{
	local rc
	local all_actions=(
		load_config
		prepareHD
		copy2HD
		convert_live2HD
		add_bootmanager
		update_fstab
		fix_grub_for_UUID
		appendGrubForOtherOS
		fix_usb_install
		purge_live_only_stuff
	)

	#
	# log my call
	#
	logit $"main"
	#

	if [ ! -f "$CONFIG_FILE" ]; then
		echo $"Config file $CONFIG_FILE could not be found."
		return 1
	fi

	#
	# say the world we have started our work
	#
	progress $"$FLL_DISTRO_NAME-installer started"
	
	#
	# is that needed ?
	#
	touch $TMPDIR/errors

	#
	# do the main job
	#
	for action in "${all_actions[@]}"; do
		$action
	done

	##
	## Some error handlind needed
	##
	# rc=$?
	# MODULE_ERROR=$(<$TMPDIR/errors)

	# if [ -n "$MODULE_ERROR" ]; then
		#
		# return 1
	# fi

	
	if [ "$BOOT_DISK" = "yes" ]; then
		make_floppy
	fi

	#
	# say the world we have done our work
	#
	end_progress

	# Success Message and end installer
	logit $"$FLL_DISTRO_NAME was successfully installed to hd."

	# 
	# copy the install log into users home
	#
	cp -f $LOG  "$TARGET_MNT_POINT/home/$USER_NAME"

	# if needed unmount the partitions
	if [ "$INSTALL_META" = no ]; then
		for i in $HD_MAP; do
			point=$(echo $i | cut -d":" -f2)
			umount $TARGET_MNT_POINT$point
		done
	
		# Just to be sure :-)
		umount $TARGET_MNT_POINT
	fi

	exit 0
}
##-------------------------------------

