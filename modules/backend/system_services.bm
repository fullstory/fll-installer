##
##-------------------------------------
# Needs:
# SERVICES_START
# TARGET_MNT_POINT
#
# Calls:
# logit
# chroot_it
#
##-------------------------------------
##
function system_services()
{
	local UPDATE_RCD
	local SERVICE_WHITELIST=(
		alsa
		alsa-utils
		atd
		avahi-daemon
		bootclean
		bootlogd
		bootmisc.sh
		capiutils
		checkfs.sh
		checkroot.sh
		console-screen.sh
		console-screen.kbd.sh
		cron
		dbus
		etc-setserial
		fuse-utils
		glibc.sh
		gpm
		hal
		halt
		hdparm
		hibernate
		hostname.sh
		hotkey-setup
		hwclock.sh
		hwclockfirst.sh
		ifupdown
		ifupdown-clean
		isdnactivecards
		keymap.sh
		kill-uswsusp-image
		killprocs
		klogd
		module-init-tools
		mountall-bootclean.sh
		mountall.sh
		mountdevsubfs.sh
		mountkernfs.sh
		mountnfs-bootclean.sh
		mountnfs.sh
		mtab.sh
		networking
		pcmciautils
		ppp
		pppd-dns
		procps.sh
		rc.local
		reboot
		rmnologin
		screen-cleanup
		sendsigs
		setserial
		single
		stop-bootlogd
		stop-bootlogd-single
		sudo
		sysklogd
		udev
		udev-mtab
		umountfs
		umountnfs.sh
		umountroot
		urandom
		vbesave
		wpa-ifupdown
		x11-common
	)

	#
	# extra/optional services as defined in config
	#
	[[ $SERVICES_START ]] && SERVICE_WHITELIST+=( $SERVICES_START )

	#
	# log my call
	#
	logit $"system_services"
	#

	for service in "$TARGET_MNT_POINT"/etc/init.d/*; do
		[[ -x $service ]] || continue

		service="${service##*/}"
		
		case "$service" in 
			rc|rc.local|rcS)
				continue
				;;
			?dm)
				# already configured during live boot
				continue
				;;
		esac

		#
		# the service in is our whitelist. determine the runlevel configuration of this service
		# as preserved in the read-only chroot (DEFAULT_DIR). apply the same configuration to
		# the installed chroot. fll_analyze_runlevels(1) is the tool used to examine runlevel
		# configuration, it is provided by fll-live-initscripts.
		#
		if [[ " ${SERVICE_WHITELIST[@]} " == *" $service "* ]]; then
			UPDATE_RCD=
			UPDATE_RCD=( $(/usr/bin/fll_analyze_initscripts --chroot "$DEFAULT_DIR" "$service") )
			if [[ ${UPDATE_RCD[0]} == "update-rc.d" && ${UPDATE_RCD[1]} == $service ]]; then
				chroot_it ${UPDATE_RCD[@]}
			fi
		fi
	done

	# disable all services in /etc/inetd.conf
	if [[ -x "$TARGET_MNT_POINT"/etc/init.d/openbsd-inetd ]]; then
		chroot_it update-inetd --multi --disable '*'
	fi
	
	# prepare ssh
	if [[ -x "$TARGET_MNT_POINT"/etc/init.d/ssh ]]; then
		if [[ ! -e "$TARGET_MNT_POINT/etc/ssh/ssh_host_rsa_key" ]]; then
			ssh-keygen -q -t rsa -f "$TARGET_MNT_POINT/etc/ssh/ssh_host_rsa_key" -C '' -N ''
		fi
		if [[ ! -e "$TARGET_MNT_POINT/etc/ssh/ssh_host_dsa_key" ]]; then
			ssh-keygen -q -t dsa -f "$TARGET_MNT_POINT/etc/ssh/ssh_host_dsa_key" -C '' -N ''
		fi
	fi

}

