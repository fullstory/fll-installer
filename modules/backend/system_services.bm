##
##-------------------------------------
# Needs:
# SERVICES_START
# TARGET_MNT_POINT
#
# Calls:
# logit
# chroot_it
#
##-------------------------------------
##
function system_services()
{
	#
	# log my call
	#
	logit $"system_services"

	local UPDATE_RCD
	local SERVICE_WHITELIST
	local PACKAGE_WHITELIST=(
		alsa
		alsa-utils
		atd
		avahi-daemon
		capiutils
		console-tools
		console-common
		cron
		dbus
		fuse-utils
		gpm
		hal
		hdparm
		hotkey-setup
		ifupdown
		initscripts
		klogd
		libc6
		module-init-tools
		netbase
		pcmciautils
		ppp
		procps
		screen
		setserial
		sudo
		sysklogd
		sysv-rc
		udev
		wpasupplicant
		x11-common
	)

	for p in ${PACKAGE_WHITELIST[@]}; do
		SERVICE_WHITELIST+=( $(dpkg-query -L "$p" 2>/dev/null | sed -n 's/^\/etc\/init.d\/\(.\+\)/\1/p') )
	done

	#
	# extra/optional services as defined in config
	#
	[[ $SERVICES_START ]] && SERVICE_WHITELIST+=( $SERVICES_START )

	for service in ${SERVICE_WHITELIST[@]}; do
		[[ -x "/etc/init.d/${service}" ]] || continue
		
		case "$service" in 
			?dm)
				# already configured during live boot
				continue
				;;
		esac

		#
		# the service in is our whitelist. determine the runlevel configuration of this service
		# as preserved in the read-only chroot (DEFAULT_DIR). apply the same configuration to
		# the installed chroot. fll_analyze_runlevels(1) is the tool used to examine runlevel
		# configuration, it is provided by fll-live-initscripts.
		#
		UPDATE_RCD=( $(/usr/bin/fll_analyze_initscripts --chroot "$DEFAULT_DIR" "$service") )
		if [[ ${UPDATE_RCD[0]} == "update-rc.d" && ${UPDATE_RCD[1]} == $service ]]; then
			chroot_it ${UPDATE_RCD[@]}
		fi
	done

	# disable all services in /etc/inetd.conf
	if [[ -x "$TARGET_MNT_POINT"/etc/init.d/openbsd-inetd ]]; then
		chroot_it update-inetd --multi --disable '*'
	fi
	
	# prepare ssh
	if [[ -x "$TARGET_MNT_POINT"/etc/init.d/ssh ]]; then
		if [[ ! -e "$TARGET_MNT_POINT/etc/ssh/ssh_host_rsa_key" ]]; then
			ssh-keygen -q -t rsa -f "$TARGET_MNT_POINT/etc/ssh/ssh_host_rsa_key" -C '' -N ''
		fi
		if [[ ! -e "$TARGET_MNT_POINT/etc/ssh/ssh_host_dsa_key" ]]; then
			ssh-keygen -q -t dsa -f "$TARGET_MNT_POINT/etc/ssh/ssh_host_dsa_key" -C '' -N ''
		fi
	fi

}

